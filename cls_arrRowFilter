Option Explicit
'クラスモジュール名：cls_arrRowFilter
'配列内の行に対して、条件による判定処理を行うクラス

Private arrData As Variant
Private indexer As cls_arrColIndexer

'=================================================
' プロパティ: Data
' 説明  : 配列データ（2次元）の設定。列インデックス管理クラスも内部で生成
' 引数  :
'   value - 2次元のVariant配列（タイトル行あり）
'=================================================
Public Property Let Data(value As Variant)
    arrData = value
    Set indexer = New cls_arrColIndexer
    indexer.Data = arrData
End Property

Private Function GetColIndex(colName As String) As Long
    GetColIndex = indexer.GetColIndex(colName)
End Function

'=================================================
' 関数名: IsValueEqual
' 説明  : 指定列の値が、指定値と一致するかを判定
' 引数  :
'   row     - 行番号（Long）
'   colName - 列名（String）
'   expected - 比較対象値（Variant）
' 戻り値 : 一致すれば True、異なれば False（Boolean）
' 使用例 :
'   If filter.IsValueEqual(3, "ステータス", "完了") Then ...
'=================================================
Public Function IsValueEqual(row As Long, colName As String, expected As Variant) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    IsValueEqual = (arrData(row, idx) = expected)
End Function

'=================================================
' 関数名: IsBlank
' 説明  : 指定列の値が空白かを判定
' 引数  :
'   row     - 行番号（Long）
'   colName - 列名（String）
' 戻り値 : 空白なら True、それ以外は False（Boolean）
' 使用例 :
'   If filter.IsBlank(4, "備考") Then ...
'=================================================
Public Function IsBlank(row As Long, colName As String) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    IsBlank = (Trim(arrData(row, idx) & "") = "")
End Function

'=================================================
' 関数名: IsGreaterThan
' 説明  : 指定列の値が、指定値より大きいかを判定
' 引数  :
'   row     - 行番号（Long）
'   colName - 列名（String）
'   threshold - 閾値（Double）
' 戻り値 : 条件を満たせば True（Boolean）
' 使用例 :
'   If filter.IsGreaterThan(5, "数量", 100) Then ...
'=================================================
Public Function IsGreaterThan(row As Long, colName As String, threshold As Double) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    If IsNumeric(arrData(row, idx)) Then
        IsGreaterThan = (arrData(row, idx) > threshold)
    End If
End Function

'=================================================
' 関数名: IsBetween
' 説明  : 指定列の値が、指定された範囲に入っているかを判定
' 引数  :
'   row     - 行番号（Long）
'   colName - 列名（String）
'   minVal  - 最小値（Double）
'   maxVal  - 最大値（Double）
' 戻り値 : 範囲内なら True（Boolean）
' 使用例 :
'   If filter.IsBetween(2, "点数", 60, 80) Then ...
'=================================================
Public Function IsBetween(row As Long, colName As String, minVal As Double, maxVal As Double) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    If IsNumeric(arrData(row, idx)) Then
        IsBetween = (arrData(row, idx) >= minVal And arrData(row, idx) <= maxVal)
    End If
End Function

'=================================================
' 関数名: Contains
' 説明  : 指定列の値が、指定文字列を含んでいるかを判定（部分一致）
'=================================================
Public Function Contains(row As Long, colName As String, keyword As String) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    Contains = (InStr(1, arrData(row, idx) & "", keyword, vbTextCompare) > 0)
End Function

'=================================================
' 関数名: StartsWith
' 説明  : 指定列の値が、指定文字列で始まっているかを判定
'=================================================
Public Function StartsWith(row As Long, colName As String, prefix As String) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    StartsWith = (Left(arrData(row, idx) & "", Len(prefix)) = prefix)
End Function

'=================================================
' 関数名: EndsWith
' 説明  : 指定列の値が、指定文字列で終わっているかを判定
'=================================================
Public Function EndsWith(row As Long, colName As String, suffix As String) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    EndsWith = (Right(arrData(row, idx) & "", Len(suffix)) = suffix)
End Function

'=================================================
' 関数名: HasColumn
' 説明  : 指定された列名が存在するかを確認
'=================================================
Public Function HasColumn(colName As String) As Boolean
    HasColumn = (GetColIndex(colName) <> -1)
End Function

'=================================================
' 関数名: GetValue
' 説明  : 指定されたセルの値を取得
'=================================================
Public Function GetValue(row As Long, colName As String) As Variant
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    GetValue = arrData(row, idx)
End Function
