Option Explicit
'クラスモジュール名：cls_arrRowFilter
Private arrData As Variant

'=================================================
' プロパティ: Data
' 説明  : 配列データ（2次元）の設定
' 引数  :
'   value - 2次元のVariant配列（タイトル行あり）
'=================================================
Public Property Let Data(value As Variant)
    arrData = value
End Property

' 内部で cls_arrColIndexer を使って列インデックスを取得する共通関数
Private Function GetColIndex(colName As String) As Long
    Dim indexer As New cls_arrColIndexer
    indexer.Data = arrData
    GetColIndex = indexer.GetColIndex(colName)
End Function

'=================================================
' 関数名: IsValueEqual
' 説明  : 指定列の値が、指定値と一致するかを判定する関数
'=================================================
Public Function IsValueEqual(row As Long, colName As String, expected As Variant) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    IsValueEqual = (arrData(row, idx) = expected)
End Function

'=================================================
' 関数名: IsBlank
' 説明  : 指定列の値が空白かどうかを判定する関数
'=================================================
Public Function IsBlank(row As Long, colName As String) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    IsBlank = (Trim(arrData(row, idx) & "") = "")
End Function

'=================================================
' 関数名: IsGreaterThan
' 説明  : 指定列の値が閾値より大きいかを判定する関数
'=================================================
Public Function IsGreaterThan(row As Long, colName As String, threshold As Double) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    If IsNumeric(arrData(row, idx)) Then
        IsGreaterThan = (arrData(row, idx) > threshold)
    End If
End Function

'=================================================
' 関数名: IsBetween
' 説明  : 値が指定された範囲内にあるか（含む）を判定
'=================================================
Public Function IsBetween(row As Long, colName As String, minVal As Double, maxVal As Double) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    If IsNumeric(arrData(row, idx)) Then
        IsBetween = (arrData(row, idx) >= minVal And arrData(row, idx) <= maxVal)
    End If
End Function

'=================================================
' 関数名: Contains
' 説明  : 値が指定文字列を含むかを判定（部分一致）
'=================================================
Public Function Contains(row As Long, colName As String, keyword As String) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    Contains = (InStr(1, arrData(row, idx) & "", keyword, vbTextCompare) > 0)
End Function

'=================================================
' 関数名: StartsWith
' 説明  : 値が指定文字列で始まっているかを判定
'=================================================
Public Function StartsWith(row As Long, colName As String, prefix As String) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    StartsWith = (Left(arrData(row, idx) & "", Len(prefix)) = prefix)
End Function

'=================================================
' 関数名: EndsWith
' 説明  : 値が指定文字列で終わっているかを判定
'=================================================
Public Function EndsWith(row As Long, colName As String, suffix As String) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    EndsWith = (Right(arrData(row, idx) & "", Len(suffix)) = suffix)
End Function

'=================================================
' 関数名: IsDateBefore
' 説明  : 日付が指定日より前かを判定する関数
'=================================================
Public Function IsDateBefore(row As Long, colName As String, compareDate As Date) As Boolean
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    If IsDate(arrData(row, idx)) Then
        IsDateBefore = (arrData(row, idx) < compareDate)
    End If
End Function

'=================================================
' 関数名: IsDateInPast
' 説明  : 日付が現在より前かを判定する関数
'=================================================
Public Function IsDateInPast(row As Long, colName As String) As Boolean
    IsDateInPast = IsDateBefore(row, colName, Date)
End Function

'=================================================
' 関数名: IsNotInList
' 説明  : 指定値がリストに含まれていないかを判定
'=================================================
Public Function IsNotInList(row As Long, colName As String, list As Variant) As Boolean
    Dim idx As Long, i As Long
    idx = GetColIndex(colName)
    If idx = -1 Then Exit Function

    For i = LBound(list) To UBound(list)
        If arrData(row, idx) = list(i) Then
            IsNotInList = False
            Exit Function
        End If
    Next i

    IsNotInList = True
End Function

'=================================================
' 関数名: HasColumn
' 説明  : 指定列名が存在するかを判定する関数
'=================================================
Public Function HasColumn(colName As String) As Boolean
    HasColumn = (GetColIndex(colName) <> -1)
End Function

'=================================================
' 関数名: GetValue
' 説明  : 指定セルの値を取得する関数
'=================================================
Public Function GetValue(row As Long, colName As String) As Variant
    Dim idx As Long: idx = GetColIndex(colName)
    If idx = -1 Then Exit Function
    GetValue = arrData(row, idx)
End Function

