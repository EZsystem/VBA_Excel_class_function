’VBA関数
'-----------------------------
' 配列間データ転写（辞書を使用）
'-----------------------------
' 【機能】  
'   参照配列 `temp1` の特定の列の値を、  
'   メイン配列 `arr1` の対応する列に転写する。
' 【引数】
'   - arr1:  転写対象のデータ配列（メイン）
'   - temp1: 参照データが入っている配列
'   - keyCol: 転写先のキー列
'   - targetCol: 転写対象の列
'   - lookupKeyCol: 参照元のキー列
'   - lookupValueCol: 参照する値の列
' 【スキップ条件】
'   - arr1 の 1列目と5列目に値がある場合のみ処理対象
' 【メインプロシージャ呼び出し例】
'　arr1 = ApplyDataTransfer(arr1, temp1, keyCol, targetCol, lookupKeyCol, lookupValueCol)
Function ApplyDataTransfer(arr1 As Variant, temp1 As Variant, keyCol As String, targetCol As String, lookupKeyCol As String, lookupValueCol As String) As Variant
    Dim dict As Object: Set dict = CreateObject("Scripting.Dictionary")
    Dim i As Long, lastRowTemp As Long, lastRowArr As Long
    Dim keyIdx As Long, valIdx As Long, lookupKeyIdx As Long, lookupValIdx As Long
    
    lastRowTemp = UBound(temp1, 1)
    lastRowArr = UBound(arr1, 1)
    keyIdx = GetColumnIndex(arr1, keyCol)
    valIdx = GetColumnIndex(arr1, targetCol)
    lookupKeyIdx = GetColumnIndex(temp1, lookupKeyCol)
    lookupValIdx = GetColumnIndex(temp1, lookupValueCol)
    
    If keyIdx = 0 Or valIdx = 0 Or lookupKeyIdx = 0 Or lookupValIdx = 0 Then Exit Function
    
    ' temp1 から辞書を作成
    For i = 2 To lastRowTemp
        If Trim(temp1(i, lookupKeyIdx)) <> "" Then
            dict(CStr(temp1(i, lookupKeyIdx))) = temp1(i, lookupValIdx)
        End If
    Next i
    
    ' arr1 に値を転写
    For i = 2 To lastRowArr
        If Trim(arr1(i, 1)) <> "" And Trim(arr1(i, 5)) <> "" Then ' スキップ条件
            If dict.Exists(CStr(arr1(i, keyIdx))) Then
                arr1(i, valIdx) = dict(CStr(arr1(i, keyIdx)))
            End If
        End If
    Next i
    
    ApplyDataTransfer = arr1
    Set dict = Nothing
End Function

'-----------------------------
' 計算関数（小数点第1位で四捨五入）
'-----------------------------
' 【機能】  
'   2つの列の数値を掛け算し、結果を小数点第1位で四捨五入して格納する。
' 【引数】
'   - arr1:  計算対象のデータ配列
'   - col1:  計算する値の1列目
'   - col2:  計算する値の2列目
'   - resultCol: 計算結果を格納する列
' 【スキップ条件】
'   - arr1 の 1列目と5列目に値がある場合のみ処理対象
Function ApplyCalculation_Round1(arr1 As Variant, col1 As String, col2 As String, resultCol As String) As Variant
    Dim i As Long, lastRow As Long
    Dim idx1 As Long, idx2 As Long, resultIdx As Long
    
    lastRow = UBound(arr1, 1)
    idx1 = GetColumnIndex(arr1, col1)
    idx2 = GetColumnIndex(arr1, col2)
    resultIdx = GetColumnIndex(arr1, resultCol)
    
    If idx1 = 0 Or idx2 = 0 Or resultIdx = 0 Then Exit Function
    
    For i = 2 To lastRow
        If Trim(arr1(i, 1)) <> "" And Trim(arr1(i, 5)) <> "" Then
            If IsNumeric(arr1(i, idx1)) And IsNumeric(arr1(i, idx2)) Then
                Dim value1 As Currency, value2 As Currency, result As Currency
                value1 = CCur(arr1(i, idx1))
                value2 = CCur(arr1(i, idx2))
                result = value1 * value2
                arr1(i, resultIdx) = Round(result, 1) ' 小数点第1位で四捨五入
            Else
                arr1(i, resultIdx) = ""
            End If
        End If
    Next i
    
    ApplyCalculation_Round1 = arr1
End Function

'-----------------------------
' 列インデックス取得関数
'-----------------------------
' 【機能】  
'   指定したタイトルの列番号を取得する。
' 【引数】
'   - arr: データ配列
'   - title: 検索するタイトル名
' 【戻り値】
'   - 見つかった列番号（見つからなければ 0）
Function GetColumnIndex(arr As Variant, title As String) As Long
    Dim i As Long
    For i = 1 To UBound(arr, 2)
        If arr(1, i) = title Then
            GetColumnIndex = i
            Exit Function
        End If
    Next i
    GetColumnIndex = 0
End Function
